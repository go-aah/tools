####################################################
# {{ .AppName }} - Application Routes Configuration
#
# Complete routes configuration reference:
#   https://docs.aahframework.org/routes-config.html
####################################################

#------------------------------------------------------------------------
# Domain and sub-domain configuration goes into section `domains { ... }`
#------------------------------------------------------------------------
domains {

  # Pick your choice of an `unique keyname` to define your domain section
  # in the routes configuration.
  # For e.g.: Domain name/ip address with port no
  localhost {
    name = "{{ .AppName }} routes"

    # aah supports multi-domain routes configuration out-of-the-box.
    # `host` used to determine domain routes for the incoming request.
    # For e.g: example.org
    host = "localhost"

    # Redirect trailing slash is to enable automatic redirection if the current
    # route can't be matched but a `route` for the path with (without)
    # the trailing slash exists.
    # Default value is `true`.
    redirect_trailing_slash = true

    # aah supports out-of-the-box `405 MethodNotAllowed` status with `Allow`
    # header as per `RFC7231`. Perfect for RESTful APIs.
    # Default value is `true`.
    {{ if eq .AppType "web" }}#{{ end }}method_not_allowed = true

    # aah framework supports out-of-the-box `OPTIONS` request replies.
    # User defined `OPTIONS` routes take priority over the automatic replies.
    # Perfect for RESTful APIs.
    # Default value is `true`.
    {{ if eq .AppType "web" }}#{{ end }}auto_options = true

    # Default auth is used when route does not have attribute `auth` defined.
    # If you don't define attribute `auth` then framework treats that route as
    # `anonymous` auth scheme.
    # Default value is empty string.
    #default_auth = ""

    # Mapping your custom `NotFound` implementation. It is when no matching
    # route is found. If it is not set framework default is called. This is optional one.
    # Create your controller and action method with param called `isStatic bool`.
    # Framework tells you whether route is `static route` or `application route`.
    #not_found {
    #  controller = "App"
    #  action = "NotFound"
    #}

    {{ if eq .AppType "web" -}}
    #----------------------------------------------------------------------------
    # Static Routes Configuration
    # To serve static files, it can be directory or individual file.
    # This section optional one, for e.g: RESTful APIs doesn't need this section.
    # Static files are delivered via `http.ServeContent`.
    #
    # Supported features:
    #   * Serve directory
    #   * Serve individual file
    #   * Directory listing
    #
    # Pick your choice of `unique name` for each `directory` or `individual` file
    # static route definition. It is called `route name`.
    # Doc: https://docs.aahframework.org/routes-config.html#section-static
    #----------------------------------------------------------------------------
    static {

      # Static route name, pick a unique one
      public_assets {
        # URL 'path' for serving directory
        # Below definition means '/static/**'
        path = "/static"

        # Relative to application base directory or an absolute path
        dir = "static"

        # list directory, default is 'false'
        #list = false
      }

      # serving single file
      favicon {
        path = "/favicon.png"

        # Direct file mapping, It can be relative to application base directory
        # or an absolute path. If it's relative path '/static/' prefixed automatically
        file = "img/favicon.png"
      }
    }
    {{- end }}

    #-----------------------------------------------------------------------------
    # Application routes
    # Doc: https://docs.aahframework.org/routes-config.html#section-routes
    # Doc: https://docs.aahframework.org/routes-config.html#namespace-group-routes
    #-----------------------------------------------------------------------------
    routes {

      #------------------------------------------------------
      # Pick an unique name, it's called `route name`,
      # used for reverse URL.
      #------------------------------------------------------
      index {
        # path is used to match incoming requests
        # It can contain `:name` - Named parameter and
        # `*name` - Catch-all parameter
        path = "/"

        # HTTP method mapping, It can be multiple `HTTP` methods with comma separated
        # Default value is `GET`, it can be lowercase or uppercase
        #method = "GET"

        # The controller to be called for mapped URL path.
        #   * `controller` attribute supports with or without package prefix. For e.g.: `v1/User` or `User`
        #   * `controller` attribute supports both naming conventions. For e.g.: `User` or `UserController`
        controller = "App"

        # The action/method name in the controller to be called for mapped URL path.
        # Default values are mapped based on `HTTP` method. Refer doc for more info.
        # Default action value for GET is 'Index'.
        #action = "Index"

        # Auth config attribute is used to assign auth scheme for the route.
        # If you do not this attribute then framework acquire value as follows.
        #
        #   - Inherits the parent route `auth` attribute value if present.
        #   - Inherits the `default_auth` attribute config value if defined.
        #   - Otherwise route is treated as `anonymous` auth scheme.
        #
        # When you want to define particular route as anonymous then define
        # `auth` attribute as `anonymous`.
        # Default value is empty string.
        #auth = ""
      }

    } # end - routes

  } # end - localhost

} # end - domains
