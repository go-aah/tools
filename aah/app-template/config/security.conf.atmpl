# -----------------------------------------------------------------------------
# {{ .App.Name }} - Application Security Configuration
#
# Refer documentation to explore and customize the configurations.
# Doc: https://docs.aahframework.org/security-config.html
# -----------------------------------------------------------------------------
security {

  # -----------------------------------------------------------------------------
  # Auth Schemes configuration
  # Doc: https://docs.aahframework.org/authentication.html
  # -----------------------------------------------------------------------------
  auth_schemes { {{ if (isauth . "form") }}

    # -----------------------------------------------------------------------------
    # Form auth scheme
    # Choose unique key name, it gets used as route auth.
    #
    # Doc: https://docs.aahframework.org/auth-schemes/form.html
    # -----------------------------------------------------------------------------
    form_auth {
      scheme = "form"
      authenticator = "security/AuthenticationProvider"
      authorizer = "security/AuthorizationProvider"

      # Password encoder
      # Doc: https://docs.aahframework.org/password-encoders.html
      password_encoder = "{{ .App.PasswordEncoderAlgo }}"
    }{{ end }} {{ if (isauth . "basic") }}

    # -----------------------------------------------------------------------------
    # Basic auth scheme
    # Choose unique key name, it gets used as route auth.
    #
    # Doc: https://docs.aahframework.org/auth-schemes/basic.html
    # -----------------------------------------------------------------------------
    basic_auth {
      scheme = "basic"
      realm_name = "Protected" {{ if eq .App.BasicAuthMode "file-realm" }}
      file_realm = "{{ .App.BasicAuthFileRealmPath }}"{{ else }}
      authenticator = "security/AuthenticationProvider"
      authorizer = "security/AuthorizationProvider"{{ end }}

      # Password encoder
      # Doc: https://docs.aahframework.org/password-encoders.html
      password_encoder = "{{ .App.PasswordEncoderAlgo }}"
    }{{ end }} {{ if (isauth . "generic") }}

    # -----------------------------------------------------------------------------
    # Generic auth scheme
    # Choose unique key name, it gets used as route auth.
    #
    # Doc: https://docs.aahframework.org/auth-schemes/generic.html
    # -----------------------------------------------------------------------------
    generic_auth {
      scheme = "generic"
      authenticator = "security/AuthenticationProvider"
      authorizer = "security/AuthorizationProvider"
    }{{ end }}
  }

  # -----------------------------------------------------------------------------
  # Password Encoders Configuration
  # aah supports `bcrypt`, `scrypt`, `pbkdf2` password algorithm.
  #
  # Doc: https://docs.aahframework.org/password-encoders.html
  # -----------------------------------------------------------------------------
  password_encoder { {{ if eq .App.PasswordEncoderAlgo "bcrypt" }}

    bcrypt {
      enable = true
      cost = 12
    }{{ end }} {{ if eq .App.PasswordEncoderAlgo "scrypt" }}

    scrypt {
      enable = true
    }{{ end }} {{ if eq .App.PasswordEncoderAlgo "pbkdf2" }}

    pbkdf2 {
      enable = true
    }{{ end }}
  } {{ if .App.IsWebApp }}{{ if .App.IsSessionConfigRequired }}

  # -----------------------------------------------------------------------------
  # Session configuration
  # HTTP state management across multiple requests.
  #
  # Doc: https://docs.aahframework.org/security-config.html#section-session
  # -----------------------------------------------------------------------------
  session {
    mode = "{{ if eq .App.AuthScheme "" }}stateless{{ else }}stateful{{ end }}"
    store {
      type = "{{ .App.SessionStore }}"{{ if eq .App.SessionStore "file" }}
      filepath = "{{ .App.SessionFileStorePath }}"{{ end }}
    }
    prefix = "aah_{{ .App.Name }}"
    sign_key = "{{ securerandomstring 64 }}"
    enc_key = "{{ securerandomstring 32 }}"
  }{{ end }}{{ end }} {{ if .App.IsWebApp }}

  # -----------------------------------------------------------------------------
  # Anti-CSRF (Cross Site Request Forgery protection)
  #
  # Doc: https://docs.aahframework.org/anti-csrf-protection.html
  # -----------------------------------------------------------------------------
  anti_csrf {
    enable = true
    sign_key = "{{ securerandomstring 64 }}"
    enc_key = "{{ securerandomstring 32 }}"
  }{{ end }}

  # ---------------------------------------------------------------------------
  # HTTP Secure Header(s)
  # Application security headers with many safe defaults.
  #
  # Doc: https://docs.aahframework.org/security-config.html#section-http-header
  #
  # Tip: Quick way to verify secure headers - https://securityheaders.io
  # ---------------------------------------------------------------------------
  http_header {
    enable = true

    # X-XSS-Protection
    {{ if .App.IsWebApp -}}#xxssp = "1; mode=block"{{ else }}xxssp = ""{{ end }}

    # X-Content-Type-Options
    #xcto = "nosniff"

    # X-Frame-Options
    {{ if .App.IsWebApp -}}#xfo = "SAMEORIGIN"{{ else }}xfo = "DENY"{{ end }}

    # Referrer-Policy
    {{ if .App.IsWebApp -}}#rp = "no-referrer-when-downgrade"{{ else }}rp = ""{{ end }}

    # Strict-Transport-Security (STS, aka HSTS)
    sts {
      #max_age = "720h"
    }

    # Content-Security-Policy (CSP)
    csp {
      #directives = ""
      report_uri = ""
      report_only = true
    }

    # Public-Key-Pins PKP (aka HPKP)
    pkp {
      # The Base64 encoded Subject Public Key Information (SPKI) fingerprint.
      # These values gets added as `pin-sha256=<key1>; ...`.
      #keys = [
      #"X3pGTSOuJeEVw989IJ/cEtXUEmy52zs1TZQrU06KUKg=",
      #"MHJYVThihUrJcxW6wcqyOISTXIsInsdj3xK8QrZbHec="
      #]

      max_age = "720h"
      report_uri = ""
      report_only = true
    }

    # X-Permitted-Cross-Domain-Policies
    {{ if .App.IsWebApp -}}#xpcdp = "master-only"{{ else }}xpcdp = ""{{ end }}
  }
}
