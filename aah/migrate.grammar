# ------------------------------------------------------------
# aah migrate grammar file
#
# Syntax format is same as aah config format
# ------------------------------------------------------------

file {

  # Grammar for Go source file (.go)
  # Each line have "from" and "to" replacement
  #
  # Format: "oldsignature", "newsignature"
  go {
    upgrade_replacer = [
      "aah.AddServerTLSConfig(", "aah.SetTLSConfig(",
      "aah.EventOnAfterReply", "aah.EventOnPostReply",
      "aah.OnShutdown(", "aah.OnPostShutdown(",
      "// Event: OnShutdown", "// Event: OnPostShutdown",
      "aah.OnRequest(", "aah.AppHTTPEngine().OnRequest(",
      "aah.OnPreReply(", "aah.AppHTTPEngine().OnPreReply(",
      "aah.OnPostReply(", "aah.AppHTTPEngine().OnPostReply(",
      "aah.OnAfterReply(", "aah.AppHTTPEngine().OnPostReply(",
      "aah.OnPreAuth(", "aah.AppHTTPEngine().OnPreAuth(",
      "aah.OnPostAuth(", "aah.AppHTTPEngine().OnPostAuth(",
      "aah.Middlewares(", "aah.AppHTTPEngine().Middlewares(",
      ".SubscribeEventf(", ".SubscribeEventFunc(",
      ".UnsubscribeEventf(", ".UnsubscribeEventFunc(",
      "aah.KeyViewArgRequestParams", "aah.KeyViewArgRequest",
      "ahttp.GetResponseWriter(", "ahttp.AcquireResponseWriter(",
      "ahttp.PutResponseWriter(", "ahttp.ReleaseResponseWriter(",
      "ahttp.GetGzipResponseWriter(", "ahttp.WrapGzipWriter(",
      "ahttp.PutGzipResponseWiriter(", "ahttp.ReleaseResponseWriter(",
      "Req.Raw", "Req.Unwrap()",
      "Req.AcceptContentType", "Req.AcceptContentType()",
      "Req.AcceptEncoding", "Req.AcceptEncoding()",
      "Req.ClientIP", "Req.ClientIP()",
      "Req.ContentType", "Req.ContentType()",
      "Req.Locale", "Req.Locale()",
      ".Readfrom(", ".FromReader(",
      ".RedirectSts(", ".RedirectWithStatus(",
      ".FindDomain(", ".Lookup(",
      ".ReverseURL(", ".RouteURL(",
      ".ReverseURLm(", ".RouteURLNamedArgs(",
      ".GetAuthScheme(", ".AuthScheme("
    ]
  }

  # Grammar for View files
  # Each line have "from" and "to" replacement
  #
  # Format: "oldsignature", "newsignature"
  view {
    upgrade_replacer = [
      "{{ anitcsrftoken . }}", "{{ anticsrftoken . }}",
      "name=\"anit_csrf_token\"", "name=\"anti_csrf_token\""
    ]
  }
  
}
